<!-- Copyright: Ashley Davis (http://www.codeproject.com/Articles/182683/NetworkView-A-WPF-custom-control-for-visualizing-a) -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:diagnostics="clr-namespace:System.Diagnostics;assembly=WindowsBase"
    xmlns:local="clr-namespace:StoryDesigner"
    xmlns:network="clr-namespace:StoryDesigner.Network">
    <SolidColorBrush
        x:Key="selectionBorderColor"
        Color="Blue" />

    <SolidColorBrush
        x:Key="selectionBorderBackgroundColor"
        Color="Blue"
        Opacity="0.25" />

    <Style TargetType="{x:Type network:NodeItem}">
        <Setter
            Property="ParentNetworkView"
            Value="{Binding
                RelativeSource={RelativeSource
                    FindAncestor,
                    AncestorType={x:Type network:NetworkView}},
                Path=.}" />

        <Setter
            Property="Canvas.Left"
            Value="{Binding
                X,
                RelativeSource={RelativeSource Self},
                Mode=TwoWay}" />
        <Setter
            Property="Canvas.Top"
            Value="{Binding
                Y,
                RelativeSource={RelativeSource Self},
                Mode=TwoWay}" />

        <Setter
            Property="Canvas.ZIndex"
            Value="{Binding
                ZIndex,
                RelativeSource={RelativeSource Self},
                Mode=TwoWay}" />

        <Setter
            Property="Background"
            Value="Transparent" />
        <Setter
            Property="BorderBrush"
            Value="Transparent" />
        <Setter
            Property="BorderThickness"
            Value="1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type network:NodeItem}">
                    <Border
                        x:Name="selectionBorder"
                        Margin="{TemplateBinding Margin}"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="2">
                        <Border.RenderTransform>
                            <TranslateTransform
                                X="{Binding
                                    RelativeSource={RelativeSource
                                        FindAncestor,
                                        AncestorType={x:Type network:NetworkView}},
                                    Path=Camera.X}"
                                Y="{Binding
                                    RelativeSource={RelativeSource
                                        FindAncestor,
                                        AncestorType={x:Type network:NetworkView}},
                                    Path=Camera.Y}" />
                        </Border.RenderTransform>
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsSelected"
                            Value="True">
                            <Setter
                                Property="BorderBrush"
                                TargetName="selectionBorder"
                                Value="{StaticResource selectionBorderColor}" />
                            <Setter
                                Property="Background"
                                TargetName="selectionBorder"
                                Value="{StaticResource selectionBorderBackgroundColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type network:ConnectorItem}">
        <Setter
            Property="ParentNetworkView"
            Value="{Binding
                RelativeSource={RelativeSource
                    FindAncestor,
                    AncestorType={x:Type network:NetworkView}},
                Path=.}" />
        <Setter
            Property="ParentNodeItem"
            Value="{Binding
                RelativeSource={RelativeSource
                    FindAncestor,
                    AncestorType={x:Type network:NodeItem}},
                Path=.}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type network:ConnectorItem}">

                    <ContentPresenter />

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="noScrollViewerListBoxStyle"
        TargetType="ListBox">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Canvas IsItemsHost="True" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type network:NetworkView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type network:NetworkView}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <network:NodeItemsControl
                                x:Name="PART_NodeItemsControl"
                                ItemContainerStyle="{TemplateBinding NodeItemContainerStyle}"
                                ItemTemplate="{TemplateBinding NodeItemTemplate}"
                                ItemTemplateSelector="{TemplateBinding NodeItemTemplateSelector}"
                                ItemsSource="{TemplateBinding Nodes}"
                                SelectionMode="Extended"
                                Style="{StaticResource noScrollViewerListBoxStyle}" />
                            <ItemsControl
                                x:Name="PART_ConnectionItemsControl"
                                ItemContainerStyle="{TemplateBinding ConnectionItemContainerStyle}"
                                ItemTemplate="{TemplateBinding ConnectionItemTemplate}"
                                ItemTemplateSelector="{TemplateBinding ConnectionItemTemplateSelector}"
                                ItemsSource="{TemplateBinding Connections}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <Canvas />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:EditableTextBlock}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:EditableTextBlock}">
                    <Grid
                        x:Name="PART_GridContainer"
                        Height="{TemplateBinding Height}"
                        Width="{TemplateBinding Width}"
                        Background="{TemplateBinding Background}">
                        <TextBlock
                            x:Name="PART_TbDisplayText"
                            Background="{Binding
                                Mode=TwoWay,
                                Path=TextBlockBackgroundColor,
                                RelativeSource={RelativeSource
                                    AncestorType={x:Type local:EditableTextBlock}}}"
                            Foreground="{Binding
                                Mode=TwoWay,
                                Path=TextBlockForegroundColor,
                                RelativeSource={RelativeSource
                                    AncestorType={x:Type local:EditableTextBlock}}}"
                            Text="{Binding
                                Mode=TwoWay,
                                Path=Text,
                                RelativeSource={RelativeSource
                                    AncestorType={x:Type local:EditableTextBlock}}}"
                            Visibility="Visible" />
                        <TextBox
                            x:Name="PART_TbEditText"
                            AcceptsReturn="{TemplateBinding Multiline}"
                            Background="{Binding
                                Mode=TwoWay,
                                Path=TextBoxBackgroundColor,
                                RelativeSource={RelativeSource
                                    AncestorType={x:Type local:EditableTextBlock}}}"
                            Foreground="{Binding
                                Mode=TwoWay,
                                Path=TextBoxForegroundColor,
                                RelativeSource={RelativeSource
                                    AncestorType={x:Type local:EditableTextBlock}}}"
                            Text="{Binding
                                Mode=TwoWay,
                                Path=Text,
                                RelativeSource={RelativeSource
                                    AncestorType={x:Type local:EditableTextBlock}}}"
                            Visibility="Hidden" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>